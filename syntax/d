EXPRESSION_LOGIQUE: VALUE_BOOL | idf| AND | OR | NOT| SUP|INF|SUPE|INFE|EGA|DIF ;
EXPRESSION_ARITHMETIQUE: VALUE_NUMERIC | idf | PLUS | MOINS| DIV| FOIS| left_par EXPRESSION_ARITHMETIQUE right_par;
LIST_EXPRESSION_ARITHMETIQUE: LIST_EXPRESSION_ARITHMETIQUE EXPRESSION_ARITHMETIQUE | EXPRESSION_ARITHMETIQUE comma EXPRESSION_ARITHMETIQUE;
LIST_EXPRESSION_LOGIQUE: LIST_EXPRESSION_LOGIQUE comma EXPRESSION_LOGIQUE | EXPRESSION_LOGIQUE comma EXPRESSION_LOGIQUE;

AND: and left_par LIST_EXPRESSION_LOGIQUE right_par;
OR: or left_par LIST_EXPRESSION_LOGIQUE right_par;
NOT: not left_par EXPRESSION_LOGIQUE right_par;

PLUS: EXPRESSION_ARITHMETIQUE plus EXPRESSION_ARITHMETIQUE;
MOINS: EXPRESSION_ARITHMETIQUE dash EXPRESSION_ARITHMETIQUE;
DIV:EXPRESSION_ARITHMETIQUE fw_slash EXPRESSION_ARITHMETIQUE;
FOIS: EXPRESSION_ARITHMETIQUE asterisk EXPRESSION_ARITHMETIQUE;


SUP: sup left_par EXPRESSION_ARITHMETIQUE comma EXPRESSION_ARITHMETIQUE right_par;
INF: inf left_par EXPRESSION_ARITHMETIQUE comma EXPRESSION_ARITHMETIQUE right_par;
SUPE:supe left_par EXPRESSION_ARITHMETIQUE comma EXPRESSION_ARITHMETIQUE right_par;
INFE:infe left_par EXPRESSION_ARITHMETIQUE comma EXPRESSION_ARITHMETIQUE right_par;
EGA:ega left_par EXPRESSION_ARITHMETIQUE comma EXPRESSION_ARITHMETIQUE right_par;
DIF:dif left_par EXPRESSION_ARITHMETIQUE comma EXPRESSION_ARITHMETIQUE right_par;

INPUT: left_ar k_input idf v_string fw_slash right_ar;
OUTPUT: left_ar k_output LIST_FORMAT fw_slash right_ar;
LIST_FORMAT: v_string plus idf LIST_FORMAT | v_string;

INSTRUCTION: INPUT | OUTPUT;

IF:;
DO_WHILE:;
FOR:;

BLOCK_DEC_CONST: left_ar idf eq VALUE fw_slash right_ar semi_col INIT_DEC_CONST | CLOSE_SUB;
BLOCK_DEC_ARRAY:  semi_col INLINE_DEC_ARRAY | CLOSE_ARRAY;

IDF_DEC_INIT: left_ar idf eq VALUE fw_slash right_ar;
IDF_DEC_ARRAY: left_ar idf col v_integer fw_slash right_ar;